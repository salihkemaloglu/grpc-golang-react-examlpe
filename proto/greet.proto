syntax = "proto3";

package blog;

option go_package = "blogpb";

message Blog {
    string id = 1;
    string author_id = 2;
    string title = 3;
    string content = 4;
}
message Story {
    int32 id = 1;
    int32 score = 2;
    string title = 3;
    string by = 4;
    int32 time = 5;
    string url = 6;
}
message CreateBlogRequest {
    Blog blog = 1;
}

message CreateBlogResponse {
    Blog blog = 1; // will have a blog id
}

message ReadBlogRequest {
    string blog_id = 1;
}

message ReadBlogResponse {
    Blog blog = 1;
}

message UpdateBlogRequest {
    Blog blog = 1;
}

message UpdateBlogResponse {
    Blog blog = 1;
}

message DeleteBlogRequest {
    string blog_id = 1;
}

message DeleteBlogResponse {
    string blog_id = 1;
}

message ListBlogRequest {

}

message ListBlogResponse {
    Blog blog = 1;
}

message Chunk {
    bytes Content = 1;
}

enum UploadStatusCode {
    Unknown = 0;
    Ok = 1;
    Failed = 2;
}

message UploadStatus {
    string Message = 1;
    UploadStatusCode Code = 2;
}
message LongGreetRequest {
    bytes greeting = 1;
}

message LongGreetResponse {
    string result = 1;
}
message HelloRequest {
    string name = 1;
  }
  
  message HelloResponse {
    string message = 1;
  }
service BlogService {
    rpc CreateBlog (CreateBlogRequest) returns (CreateBlogResponse);
    rpc ReadBlog (ReadBlogRequest) returns (ReadBlogResponse); // return NOT_FOUND if not found
    rpc UpdateBlog (UpdateBlogRequest) returns (UpdateBlogResponse); // return NOT_FOUND if not found
    rpc DeleteBlog (DeleteBlogRequest) returns (DeleteBlogResponse); // return NOT_FOUND if not found
    rpc ListBlog (ListBlogRequest) returns (stream ListBlogResponse);
    rpc SayHello (HelloRequest) returns (HelloResponse);
    rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};
    rpc Upload(stream Chunk) returns (UploadStatus) {}
}